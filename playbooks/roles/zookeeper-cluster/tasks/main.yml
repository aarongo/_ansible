---
# tasks file for zookeeper-cluster

# 创建目录
- name: create directory
  file:
    path: "{{INSTALL_HOME}}"
    state: directory
    owner: root
    group: root
  when: (base_home == 'no')


# 进行判断 jdk 是否存在
- name: JAVA_HOME is exist?
  shell: "find {{ INSTALL_HOME }}  -name {{ JAVA_NAME }}  | wc -l"
  register: stdout_result
  ignore_errors: True


# 安装 JAVA_HOME
- name: Install Java 8u102
  unarchive:
    src: "../../../source_files/jdk-8u102-linux-x64.tar.gz"
    dest: "{{INSTALL_HOME}}/"
  when: (stdout_result.stdout != "0")


# 更新系统环境变量 JAVA_HOME
- name: Add mappings to /etc/profile
  blockinfile:
    dest: /etc/profile
    block: |
      {{item.info}}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{item.name}}"
  with_items: "{{profile}}"



# 直接网络下载安装 zookeeper
- name: Download zookeeper {{zookeeper_version}}
  unarchive:
    src: "../../../source_files/zookeeper-{{zookeeper_version}}.tar.gz"
    dest: "{{INSTALL_HOME}}/"
    owner: root
    group: root

# 传送配置文件到远程服务器
- name: transfer config to remote server
  template:
    src: zoo.cfg.j2
    dest: "{{zookeeper_config_path}}/zoo.cfg"


# 创建 zookeeper 数据目录和日志目录
- name: "Create zookeeper {{item}} directory."
  file: path={{item}} state=directory
  with_items:
    - "{{data_dir}}"
    - "{{log_dir}}"

# 写入 zookeeper 主机 ID 文件
- name: Write myid file.
  template: src=myid.j2 dest={{data_dir}}/myid

# 启动 zookeeper
- name: start zookeeper
  shell: "source /etc/profile&&{{zookeeper_home}}bin/zkServer.sh start"

